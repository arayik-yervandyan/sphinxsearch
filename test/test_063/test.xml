<?xml version="1.0" encoding="utf-8"?>
<test>

<name>blend characters</name>

<requires>
	<variant_match />
</requires>


<config>
indexer
{
	mem_limit		= 16M
}

searchd
{
	<searchd_settings/>
}

source test
{
	type			= mysql
	<sql_settings/>
	sql_query		= SELECT * FROM test_table
}

index test
{
	source	= test
	path	= <data_path/>/test

	blend_chars = @, |, +, ., *, !, (, ), [, ], {, }

	<dynamic>
		<variant>charset_type = utf-8</variant>
		<variant>charset_type = sbcs</variant>
	</dynamic>
}
</config>

<db_create>
CREATE TABLE test_table
(
	document_id INT NOT NULL,
	text VARCHAR(255) NOT NULL
);
</db_create>

<db_drop>
DROP TABLE IF EXISTS test_table
</db_drop>

<db_insert>
INSERT INTO test_table VALUES
(  1, 'aaa bbb@ccc ddd @eee fff@ggg@hhh iii@ kkk' ),
(  2, 'ggg@hhh' ),
(  3, 'xxx @ yyy' ),
(  4, 'aaa@bbb+ccc@ddd' ),
(  5, 'aaa|eee|ccc' ),
(  6, 'a+b+c+d e+f|g' ),
(  7, 'aaa bbb*ccc ddd eee fff*ggg*hhh iii' ),
(  8, 'ggg*hhh' ),
(  9, 'aaa ddd ggg hhh' ),
( 10, 'aaa bbb ccc ddd' ),
( 11, 'hello, world. how is this gonna work if we need to handle U.S.A' ),
( 20, 'its a must!!!' ),
( 21, 'hey @dude wassup' ),
( 30, 'posse' ),
( 31, 'posse()' ),
( 32, 'posse[]' ),
( 33, 'posse{}' );
</db_insert>

<queries>
	<query mode="extended2">bbb|ccc</query>
	<query mode="extended2">bbb@ccc</query>

	<query mode="extended2">bbb\|ccc</query>
	<query mode="extended2">bbb\@ccc</query>

	<query mode="extended2">bbb ccc</query>
	<query mode="extended2">"bbb ccc"</query>

	<query mode="extended2">aaa|eee|ccc</query>
	<query mode="extended2">aaa\|eee\|ccc</query>
	<query mode="extended2">"aaa|eee|ccc"</query>
	<query mode="extended2">"aaa\|eee\|ccc"</query>

	<query mode="extended2">a+b+c+d</query>
	<query mode="extended2">a+b+c+d e</query>
	<query mode="extended2">"a+b+c+d e f"</query>
	<query mode="extended2">"a+b+c+d e+f|g"</query>

	<query mode="extended2">"bbb@ccc ddd @eee"</query>
	<query mode="extended2">"ddd @eee fff@ggg@hhh"</query>
	<query mode="extended2">"fff@ggg@hhh iii@ kkk"</query>

	<query mode="extended2" expect_error="1">@</query>
	<query mode="extended2">\@</query>

	<query mode="extended2" expect_error="1">@eee kkk</query>
	<query mode="extended2">\@eee kkk</query>

	<query mode="extended2">aaa\*ccc</query>
	<query mode="extended2">aaa*ccc</query>
  
	<query mode="extended2">bbb\*ccc</query>
	<query mode="extended2">bbb*ccc</query>

	<query mode="extended2"> bbb ccc</query>
	<query mode="extended2">"bbb ccc"</query>

	<query mode="extended2">fff\*ggg</query>
	<query mode="extended2">fff*ggg</query>
	<query mode="extended2">fff*ggg*hhh</query>

	<query mode="extended2">"bbb*ccc ddd"</query>
	<query mode="extended2">"bbb*ccc ccc ddd"</query>
	<query mode="extended2">bbb*ccc &lt;&lt; ddd</query>

	<query mode="extended2">hello</query>
	<query mode="extended2">"hello world"</query>
	<query mode="extended2">hello U.S.A</query>

	<query mode="extended2">must</query>
	<query mode="extended2">must\!\!\!</query>
	<query mode="extended2">dude</query>
	<query mode="extended2">\@dude</query>

	<query mode="extended2">posse</query>
	<query mode="extended2">posse\(\)</query>
	<query mode="extended2">posse\[\]</query>
	<query mode="extended2">posse\{\}</query>
	<query mode="extended2">"posse()"</query>
	<query mode="extended2">"posse[]"</query>
	<query mode="extended2">"posse{}"</query>
</queries>

</test>
